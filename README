========
jaramiko
========

:Jaramiko: Java SSH Library
:Copyright: Copyright (c) 2005-2007  Robey Pointer <robey@lag.net>
:License: MIT
:Homepage: http://www.lag.net/jaramiko/


build 151 (12 Nov 2007)
=======================

Yikes, it's been a year since the last release! Here's what's new:

    - now supports group-exchange key exchange
    - can now write a private key out to a file in standard SSH format
    - pty requests can now send/receive terminal modes
    - new ``TransportDescription`` can be used for programmatic access to the
      encryption parameters after an encrypted session begins
    - new ``HostKeys`` implementation for reading, writing, and testing
      entries in an openssh ``known_hosts`` file
    - easier API for converting raw key data to/from a jaramiko PKey
    - many Channel methods now throw an exception on failure instead of
      returning a boolean
    - new demo app!
    - better defaults for some parameters and timeouts
    - several bug fixes (including a deadlock fix)

Thanks to John McNair and Robert Colquhoun for sending patches and bug
reports for several of these changes.


What
----

Jaramiko is a java port of paramiko, an SSH library for python. It's in pure
java (no JNI) and uses only features from Java 1.3 to increase its portability
to embedded JVMs. It's released under the MIT license, which basically means
you can do what you want with it, but you can't take credit for it.

Java and python have different attitudes and styles, so the port is not always
literal. In many cases, the API was changed in jaramiko to make it fit more
with java's style. (For example, derivatives of InputStream and OutputStream
are used instead of fake file descriptors.)


Requirements
------------

  - Java 1.3
  - a JCE implementation, or some sort of basic crypto library

Jaramiko uses an abstracted interface to access crypto functionality, so you
can substitute your own crypto library by writing a glue class. The crypto
interface is called CRAI and lives in package ``net.lag.crai``.


Building and Installing
-----------------------

To compile jaramiko, you only need to do::

    $ ant jar

which will build a ``jaramiko.jar`` file in the current directory. There are
some extensive unit tests, which you can run with::

    $ ant test

There are no other dependencies, so adding ``jaramiko.jar`` to your app's
classpath is enough.


Usage
-----

There are extensive javadocs, which can be built with::

    $ ant docs

A good place to start is the ``Transport`` class, which handles the actual
SSH connection to a remote host.

There's a small demo included in the ``demo/`` folder, which will connect
to a server, authenticate, execute a shell command, and display the output.
It prompts you for the info it needs. You can build and run it with::

    $ ant demo
    $ ./demo.sh


Bugs & Support
--------------

I haven't bothered to make a launchpad page for this project yet, but if
there's enough demand, I will. In the meantime, feel free to email me
directly: <robey@lag.net>

